version: '3'

services:

  # 数据库管理
  adminer:
    image: adminer:4
    volumes:
      - ./adminer/uploads.ini:/usr/local/etc/php/conf.d/uploads.ini
    ports:
      - ${DB_ADMINER_PORT}:8080
    environment: 
      - ADMINER_PLUGINS=tables-filter tinymce json-column
    depends_on: 
      - db


  # php-fpm
  php-fpm:
    build: ./php-fpm
    image: docker-magento2-php-fpm
    depends_on:
      - db
      #- redis
    volumes:
      - ${APPLICATION}:/var/www/html:cached

  # cron
  cron:
    build: ./cron
    depends_on:
      - php-fpm
    restart: ${CONTAINER_RESTART}
    volumes:
      - ${APPLICATION}:/var/www/html:cached
    tty: true

  # php-composer，安装组键、发布到服务器等操作
  workspace:
    build: ./workspace
    user: vscode
    working_dir: /var/www/html
    depends_on:
      - php-fpm
    volumes:
      - ${APPLICATION}:/var/www/html:cached
      - workspace-home:/home/vscode
    ports:
      - ${WORKSPACE_SSH_PORT}:22
      - ${WORKSPACE_CODER_PORT}:8080
    tty: true
    

  # nginx
  web:
    image: nginx
    depends_on:
      - php-fpm
    volumes:
      - ${APPLICATION}:/var/www/html:cached
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    ports:
      - "${NGINX_HOST_HTTP_PORT}:80"

  # redis
  #redis:
  #  #build: ./redis
  #  image: redis:4
  #  restart: ${CONTAINER_RESTART}
  varnish:
    image: varnish:6.6
    depends_on:
      - web
    volumes:
      - ./varnish/default.vcl:/etc/varnish/default.vcl:ro
    tmpfs:
      - /var/lib/varnish:exec
    environment: 
      - VARNISH_SIZE
    ports:
      - "${VARNISH_PORT}:80"

  db:
    image: mysql:5.7
    restart: ${CONTAINER_RESTART}
    volumes:
      - ${DB_DIR}:/var/lib/mysql
      - ./db/initdb.d/:/docker-entrypoint-initdb.d
    environment:
      - MYSQL_ROOT_PASSWORD=${DB_ROOT_PASSWORD}
      - MYSQL_PASSWORD=${DB_PASSWORD}
      - MYSQL_USER=${DB_USER}
      - MYSQL_DATABASE=${DB_NAME}

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.10.1
    restart: ${CONTAINER_RESTART}
    container_name: es01
    environment:
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data

volumes:
  workspace-home:
  elasticsearch-data:
    driver: local
